{"version":3,"file":"static/js/390.e470a110.chunk.js","mappings":"0LAUMA,GAAeC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,yeA6BlB,IAPgC,SAAC,GAGA,IAF/BE,EAE8B,EAF9BA,SACGC,GAC2B,YAC9B,OAAO,SAACJ,GAAD,kBAAkBI,GAAlB,aAAyBD,O,oCC7B5BE,E,QAA0BJ,EAAAA,KAAH,uFACd,YAAgC,IAA7BK,EAA4B,EAA5BA,SACd,OAAOA,GAAsB,SAKjC,O,oCCIMC,E,QAAsBN,EAAAA,KAAH,yGAEV,YAA8B,IAA3BK,EAA0B,EAA1BA,SACd,OAAOA,GAAsB,SAEhB,YACb,OADsC,EAAtBE,KACF,OAAS,YAI3B,O,oCChBMC,E,QAAkBR,EAAAA,IAAH,+KAUrB,O,8CCfMS,E,QAAsBT,EAAAA,KAAH,oHAGV,YAAmB,IAAhBK,EAAe,EAAfA,SACd,OAAOA,GAAsB,OAKjC,KAAeK,EAAAA,EAAAA,MAAKD,I,8KCPdE,EAAaX,EAAAA,EAAAA,EAAH,mjBA4BhB,EAJ4B,SAAC,GAAyC,IAApCG,EAAmC,oBACnE,OAAO,SAACQ,GAAD,kBAAgBR,GAAhB,IAAsBS,OAAO,SAASC,IAAI,0BC7B7CC,EAAgBd,EAAAA,EAAAA,IAAH,8NAenB,EAJkC,SAAC,GAA8B,IAAzBG,EAAwB,oBAC9D,OAAO,SAACW,GAAD,UAAmBX,KCR5B,EAPuBH,EAAAA,EAAAA,IAAH,mGC4DpB,EAnDkB,WAChB,IAAMe,GAAUC,EAAAA,EAAAA,WAAU,CACxBC,KAAM,CAAEC,QAAS,EAAGC,UAAW,oBAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,kBAC7BE,OAAQ,CAAEC,QAAS,OAGrB,OACE,SAACd,EAAA,EAAD,WACE,UAAC,EAAAe,SAAA,IAAD,CACEC,OAAK,QACHC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,IAAK,QACFb,GANP,WASE,SAACT,EAAA,EAAD,CAAMD,SAAU,EAAhB,qBACA,SAACD,EAAA,EAAD,CAAQC,SAAU,EAAlB,oBACA,SAACD,EAAA,EAAD,CAAQC,SAAU,EAAlB,8BACA,UAAC,EAAD,YACE,SAAC,EAAD,qBACA,SAAC,EAAD,uBACA,SAAC,EAAD,4BACA,SAAC,EAAD,mCAEF,SAACD,EAAA,EAAD,CAAQC,SAAU,EAAlB,0BACA,SAAC,EAAD,yCACA,SAACD,EAAA,EAAD,CAAQC,SAAU,EAAlB,4BACA,UAAC,EAAD,CAAMwB,KAAK,8CAAX,WACE,SAACvB,EAAA,EAAD,sBACA,SAACG,EAAA,EAAD,+BAEF,UAAC,EAAD,CAAMoB,KAAK,oCAAX,WACE,SAACvB,EAAA,EAAD,sBACA,SAACG,EAAA,EAAD,yBAEF,UAAC,EAAD,CAAMoB,KAAK,oCAAX,WACE,SAACvB,EAAA,EAAD,sBACA,SAACG,EAAA,EAAD,0BAEF,UAACqB,EAAA,EAAD,CAAQV,GAAG,IAAX,WACE,SAACd,EAAA,EAAD,sBACA,SAACG,EAAA,EAAD","sources":["Components/Button/Button.tsx","Components/Header/Header.tsx","Components/Icon/Icon.tsx","Components/Page/Page.tsx","Components/Text/Text.tsx","Components/Link/Link.tsx","Components/Library/Library.tsx","Components/Library/LibraryWrapper.tsx","Pages/About.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport type { RefAttributes, PropsWithChildren, FC } from \"react\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\n\r\ntype ButtonProps = PropsWithChildren<\r\n  LinkProps & RefAttributes<HTMLAnchorElement>\r\n>;\r\n\r\ntype StyledButtonProps = LinkProps & RefAttributes<HTMLAnchorElement>;\r\n\r\nconst StyledButton = styled(Link)<StyledButtonProps>`\r\n  display: flex;\r\n  gap: 5px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  backdrop-filter: blur(4px);\r\n  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.1);\r\n  border-radius: 30px;\r\n  border: 2px solid #fff;\r\n  padding: 0.8rem 1rem;\r\n  text-decoration: none;\r\n  transition: color 200ms, background-color 200ms, transform 200ms;\r\n  &:hover {\r\n    background-color: #fff;\r\n    color: #212121;\r\n  }\r\n  &:active {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst Button: FC<ButtonProps> = ({\r\n  children,\r\n  ...rest\r\n}: ButtonProps): JSX.Element => {\r\n  return <StyledButton {...rest}>{children}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport type { FC, PropsWithChildren } from \"react\";\r\n\r\ntype HeaderProps = PropsWithChildren<{\r\n  fontSize?: number;\r\n}>;\r\n\r\nconst Header: FC<HeaderProps> = styled.span<HeaderProps>`\r\n  font-size: ${({ fontSize }: HeaderProps) => {\r\n    return fontSize ? fontSize : \"1.5\";\r\n  }}rem;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n`;\r\nexport default Header;\r\n","import type { Theme } from \"@emotion/react\";\r\nimport styled, { StyledComponent } from \"@emotion/styled\";\r\nimport type { DetailedHTMLProps, ElementType, HTMLAttributes } from \"react\";\r\n\r\ntype IconProps = {\r\n  fontSize?: number;\r\n  bold?: boolean;\r\n};\r\n\r\ntype IconComponent = StyledComponent<\r\n  {\r\n    theme?: Theme;\r\n    as?: ElementType;\r\n  } & IconProps,\r\n  DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>,\r\n  Record<string, unknown>\r\n>;\r\n\r\nconst Icon: IconComponent = styled.span<IconProps>`\r\n  font-family: \"Segoe Fluent Icons\";\r\n  font-size: ${({ fontSize }: IconProps) => {\r\n    return fontSize ? fontSize : \"1.5\";\r\n  }}rem;\r\n  font-weight: ${({ bold }: IconProps) => {\r\n    return bold ? \"bold\" : \"normal\";\r\n  }};\r\n`;\r\n\r\nexport default Icon;\r\n","import type { Theme } from \"@emotion/react\";\r\nimport styled, { StyledComponent } from \"@emotion/styled\";\r\n\r\ntype PageProps = StyledComponent<\r\n  {\r\n    theme?: Theme | undefined;\r\n    as?: React.ElementType<any> | undefined;\r\n  },\r\n  React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>,\r\n  {}\r\n>;\r\n\r\nconst Page: PageProps = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default Page;\r\n","import { memo, FC, PropsWithChildren } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\ntype TextProps = PropsWithChildren<{\r\n  fontSize?: number;\r\n}>;\r\n\r\nconst Text: FC<TextProps> = styled.span<TextProps>`\r\n  line-height: 0.5;\r\n  padding-top: 3px;\r\n  font-size: ${({ fontSize }) => {\r\n    return fontSize ? fontSize : \"2\";\r\n  }}rem;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport default memo(Text);\r\n","import type { Theme } from \"@emotion/react\";\r\nimport styled, { Interpolation } from \"@emotion/styled\";\r\nimport type { AnchorHTMLAttributes, ClassAttributes, FC } from \"react\";\r\n\r\ntype LinkProps = ClassAttributes<HTMLAnchorElement> &\r\n  AnchorHTMLAttributes<HTMLAnchorElement> & {\r\n    css?: Interpolation<Theme>;\r\n  };\r\n\r\nconst StyledLink = styled.a`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  backdrop-filter: blur(4px);\r\n  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.1);\r\n  border-radius: 30px;\r\n  border: 2px dotted #fff;\r\n  padding: 0.8rem 1rem;\r\n  text-decoration: none;\r\n  font-size: 1.8rem;\r\n  transition: color 200ms, background-color 200ms, transform 200ms;\r\n  &:hover {\r\n    background-color: #fff;\r\n    color: #212121;\r\n    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.3);\r\n  }\r\n  &:active {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst Link: FC<LinkProps> = ({ ...rest }: LinkProps): JSX.Element => {\r\n  return <StyledLink {...rest} target=\"_blank\" rel=\"noopener noreferrer\" />;\r\n};\r\n\r\nexport default Link;\r\n","import type { FC, PropsWithChildren } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\ntype LibraryProps = PropsWithChildren<{}>;\r\n\r\nconst StyledLibrary = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  border-radius: 30px;\r\n  font-size: 1.3rem;\r\n  backdrop-filter: blur(4px);\r\n  background-color: #21212144;\r\n  border: 2px solid #fff;\r\n`;\r\n\r\nconst Library: FC<LibraryProps> = ({ ...rest }): JSX.Element => {\r\n  return <StyledLibrary {...rest} />;\r\n};\r\n\r\nexport default Library;\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst LibraryWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n`;\r\n\r\nexport default LibraryWrapper;\r\n","import { useSpring, animated } from \"react-spring\";\r\nimport Page from \"../Components/Page/Page\";\r\nimport Header from \"../Components/Header/Header\";\r\nimport Icon from \"../Components/Icon/Icon\";\r\nimport Text from \"../Components/Text/Text\";\r\nimport Button from \"../Components/Button/Button\";\r\nimport Link from \"../Components/Link/Link\";\r\nimport Library from \"../Components/Library/Library\";\r\nimport LibraryWrapper from \"../Components/Library/LibraryWrapper\";\r\nimport type { FC } from \"react\";\r\n\r\nconst About: FC = (): JSX.Element => {\r\n  const content = useSpring({\r\n    from: { opacity: 0, transform: \"translateY(200%)\" },\r\n    to: { opacity: 1, transform: \"translateY(0%)\" },\r\n    config: { tension: 250 },\r\n  });\r\n\r\n  return (\r\n    <Page>\r\n      <animated.div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          gap: \"10px\",\r\n          ...content,\r\n        }}\r\n      >\r\n        <Icon fontSize={5}>&#xE946;</Icon>\r\n        <Header fontSize={5}>About</Header>\r\n        <Header fontSize={2}>Used libraries:</Header>\r\n        <LibraryWrapper>\r\n          <Library>React</Library>\r\n          <Library>Emotion</Library>\r\n          <Library>react-spring</Library>\r\n          <Library>react-router-dom</Library>\r\n        </LibraryWrapper>\r\n        <Header fontSize={2}>Used icons:</Header>\r\n        <Library>Microsoft Fluent UI Icons</Library>\r\n        <Header fontSize={2}>Useful links:</Header>\r\n        <Link href=\"https://github.com/MateuszPerczak/tictactoe\">\r\n          <Icon>&#xE167;</Icon>\r\n          <Text>This project</Text>\r\n        </Link>\r\n        <Link href=\"https://github.com/MateuszPerczak\">\r\n          <Icon>&#xE167;</Icon>\r\n          <Text>Github</Text>\r\n        </Link>\r\n        <Link href=\"https://mateuszperczak.github.io/\">\r\n          <Icon>&#xE12B;</Icon>\r\n          <Text>Website</Text>\r\n        </Link>\r\n        <Button to=\"/\">\r\n          <Icon>&#xE10F;</Icon>\r\n          <Text>Back</Text>\r\n        </Button>\r\n      </animated.div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"names":["StyledButton","styled","Link","children","rest","Header","fontSize","Icon","bold","Page","Text","memo","StyledLink","target","rel","StyledLibrary","content","useSpring","from","opacity","transform","to","config","tension","animated","style","display","flexDirection","alignItems","gap","href","Button"],"sourceRoot":""}